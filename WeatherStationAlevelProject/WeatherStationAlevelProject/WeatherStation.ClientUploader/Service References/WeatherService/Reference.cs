//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WeatherStation.ClientUploader.WeatherService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WeatherService.IWeatherService")]
    public interface IWeatherService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherService/GetMostRecentWeatherLogDateTime", ReplyAction="http://tempuri.org/IWeatherService/GetMostRecentWeatherLogDateTimeResponse")]
        System.Nullable<System.DateTime> GetMostRecentWeatherLogDateTime(int weatherStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherService/GetMostRecentWeatherLogDateTime", ReplyAction="http://tempuri.org/IWeatherService/GetMostRecentWeatherLogDateTimeResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.DateTime>> GetMostRecentWeatherLogDateTimeAsync(int weatherStationId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWeatherServiceChannel : WeatherStation.ClientUploader.WeatherService.IWeatherService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WeatherServiceClient : System.ServiceModel.ClientBase<WeatherStation.ClientUploader.WeatherService.IWeatherService>, WeatherStation.ClientUploader.WeatherService.IWeatherService {
        
        public WeatherServiceClient() {
        }
        
        public WeatherServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WeatherServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WeatherServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WeatherServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Nullable<System.DateTime> GetMostRecentWeatherLogDateTime(int weatherStationId) {
            return base.Channel.GetMostRecentWeatherLogDateTime(weatherStationId);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.DateTime>> GetMostRecentWeatherLogDateTimeAsync(int weatherStationId) {
            return base.Channel.GetMostRecentWeatherLogDateTimeAsync(weatherStationId);
        }
    }
}
